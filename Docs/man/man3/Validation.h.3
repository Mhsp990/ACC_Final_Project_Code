.TH "Validation.h" 3 "Version 1.0.0" "ACC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Validation.h
.SH SYNOPSIS
.br
.PP
\fC#include 'Validation\&.c'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBcheckCollision\fP (bool \fBACC_enable\fP, float \fBrelativeDistance\fP)"
.br
.ti -1c
.RI "bool \fBcheckValidationSensors\fP (bool \fBACC_enable\fP, bool \fBFault_signal\fP, bool \fBGas_pedal\fP, bool \fBBrake_pedal\fP)"
.br
.ti -1c
.RI "bool \fBcheckRainSafeDistance\fP (bool \fBACC_enable\fP, bool \fBrain_signal\fP, const float \fBD_distance\fP, float \fBV_ego\fP, float \fBsafeDistance\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool checkCollision (bool ACC_enable, float relativeDistance)"

.PP
\fBParameters\fP
.RS 4
\fIACC_enable\fP Checks if ACC is Enabled  
.br
\fIrelativeDistance\fP Relative Distance Between Ego and Lead Car 
.RE
.PP
.PP
.nf
5                                              {
6 
7     if(ACC_enable == true && relativeDistance <= 0){
8         printf("Collision detected\&. Take the necessary actions\&.\&.\&.\\n");
9         return true;
10     }else{
11         return false;
12     }   
13 }
.fi

.SS "bool checkRainSafeDistance (bool ACC_enable, bool rain_signal, const float D_distance, float V_ego, float safeDistance)"

.PP
\fBParameters\fP
.RS 4
\fIACC_enable\fP Checks if ACC is Enabled  
.br
\fIrain_signal\fP checks the presence of rain on the track  
.br
\fID_distance\fP default distance  
.br
\fIV_ego\fP velocity of ego car  
.br
\fIsafeDistance\fP Safe distance 
.RE
.PP
.PP
.nf
47                                                {
48                             
49     if(ACC_enable && rain_signal){
50         if(safeDistance != (D_distance + V_ego*6)){
51             printf("Safe distance is not correct for a wet street\\n");
52             return 1;
53         }
54     }
55     return 0;
56 }
.fi

.SS "bool checkValidationSensors (bool ACC_enable, bool Fault_signal, bool Gas_pedal, bool Brake_pedal)"

.PP
\fBParameters\fP
.RS 4
\fIACC_enable\fP Checks if ACC is Enabled  
.br
\fIFault_signal\fP Checks if all sensors are working  
.br
\fIGas_pedal\fP Checks if gas pedal was pressed  
.br
\fIBrake_pedal\fP Checks if break pedal was pressed 
.RE
.PP
.PP
.nf
18                                                {
19     short int flag = 0;
20 
21     if(ACC_enable){
22         if(Fault_signal){
23             printf("ACC could not have triggered with a Fault signal on\\n");
24             flag++;
25         }
26         if(Gas_pedal){
27             printf("ACC could not have triggered with a Gas pedal signal on\\n");
28             flag++;
29         }
30          if(Brake_pedal){
31             printf("ACC could not have triggered with a Break pedal signal on\\n");
32             flag++;
33         }
34         if(flag){
35             return 1;
36         }
37     }else{
38         return 0;
39     }
40     return 0;
41 }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for ACC from the source code\&.
